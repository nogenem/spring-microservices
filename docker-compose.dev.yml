version: '3.8'

services:

  product-service:
    container_name: product-service
    build:
      context: ./
      dockerfile: ./Dockerfile.dev
      args:
        username: ${DOCKER_IMAGES_OS_USERNAME}
        useruid: ${DOCKER_IMAGES_OS_USERUID}
        usergid: ${DOCKER_IMAGES_OS_USERGID}
        service_folder_name: product-service
    ports:
      - ${PRODUCT_SERVICE_PORT}:${PRODUCT_SERVICE_PORT} # App
      - ${PRODUCT_SERVICE_DEBUGGER_PORT}:5005 # Debugger
      - ${PRODUCT_SERVICE_LIVE_RELOAD_PORT}:35729 # Livereload
    volumes:
      - ./product-service:/app/product-service
      - ./pom.xml:/app/pom.xml
      - ./.env:/app/.env
      - ${HOME}/.m2:/home/${DOCKER_IMAGES_OS_USERNAME}/.m2
    depends_on:
      - product-service-mongo

  inventory-service:
    container_name: inventory-service
    build:
      context: ./
      dockerfile: ./Dockerfile.dev
      args:
        username: ${DOCKER_IMAGES_OS_USERNAME}
        useruid: ${DOCKER_IMAGES_OS_USERUID}
        usergid: ${DOCKER_IMAGES_OS_USERGID}
        service_folder_name: inventory-service
    ports:
      - ${INVENTORY_SERVICE_PORT}:${INVENTORY_SERVICE_PORT} # App
      - ${INVENTORY_SERVICE_DEBUGGER_PORT}:5005 # Debugger
      - ${INVENTORY_SERVICE_LIVE_RELOAD_PORT}:35729 # Livereload
    volumes:
      - ./inventory-service:/app/inventory-service
      - ./pom.xml:/app/pom.xml
      - ./.env:/app/.env
      - ${HOME}/.m2:/home/${DOCKER_IMAGES_OS_USERNAME}/.m2
    depends_on:
      - inventory-service-postgres

  product-service-mongo:
    container_name: product-service-mongo
    image: mongo:6.0.5
    command: mongod --port ${PRODUCT_SERVICE_MONGO_PORT}
    restart: always
    ports:
      - ${PRODUCT_SERVICE_MONGO_PORT}:${PRODUCT_SERVICE_MONGO_PORT}
    expose:
      - ${PRODUCT_SERVICE_MONGO_PORT}
    volumes:
      - ./_databases/product-service-mongo-data:/data/db:rw
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${PRODUCT_SERVICE_MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${PRODUCT_SERVICE_MONGO_PASSWORD}

  product-service-mongo-express:
    container_name: product-service-mongo-express
    image: mongo-express
    restart: always
    ports:
      - ${PRODUCT_SERVICE_MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${PRODUCT_SERVICE_MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${PRODUCT_SERVICE_MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${PRODUCT_SERVICE_MONGO_USERNAME}:${PRODUCT_SERVICE_MONGO_PASSWORD}@${PRODUCT_SERVICE_MONGO_HOST}:${PRODUCT_SERVICE_MONGO_PORT}/
    depends_on:
      - product-service-mongo

  inventory-service-postgres:
    container_name: inventory-service-postgres
    image: postgres:15.2
    command: -p ${INVENTORY_SERVICE_POSTGRES_PORT}
    restart: always
    ports:
      - ${INVENTORY_SERVICE_POSTGRES_PORT}:${INVENTORY_SERVICE_POSTGRES_PORT}
    expose:
      - ${INVENTORY_SERVICE_POSTGRES_PORT}
    volumes:
      - ./_databases/inventory-service-postgres-data:/data/postgres:rw
    environment:
      POSTGRES_DB: ${INVENTORY_SERVICE_POSTGRES_DATABASE}
      POSTGRES_USER: ${INVENTORY_SERVICE_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${INVENTORY_SERVICE_POSTGRES_PASSWORD}
      PGPORT: ${INVENTORY_SERVICE_POSTGRES_PORT}
      PGDATA: /data/postgres

  inventory-service-postgres-adminer:
    container_name: inventory-service-postgres-adminer
    image: adminer
    restart: always
    ports:
      - ${INVENTORY_SERVICE_POSTGRES_ADMINER_PORT}:8080
    environment:
      - ADMINER_DEFAULT_SERVER=${INVENTORY_SERVICE_POSTGRES_HOST}:${INVENTORY_SERVICE_POSTGRES_PORT}
    depends_on:
      - inventory-service-postgres
