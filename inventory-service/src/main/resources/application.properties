# Application
spring.application.name=inventory-service
server.port=${INVENTORY_SERVICE_CONTAINER_PORT}

# com.microservices.spring.common
# responses.exceptions.return-stack-trace=true

# Logging
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Tracing
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${ZIPKIN_HOSTNAME}:${ZIPKIN_CONTAINER_PORT}/api/v2/spans

# Monitoring
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Eureka
eureka.client.serviceUrl.defaultZone=http://${DISCOVERY_SERVER_SERVICE_SECURITY_USERNAME}:${DISCOVERY_SERVER_SERVICE_SECURITY_PASSWORD}@${DISCOVERY_SERVER_SERVICE_HOSTNAME}:${DISCOVERY_SERVER_SERVICE_CONTAINER_PORT}/eureka/

# Postgres
spring.datasource.url=jdbc:postgresql://${INVENTORY_SERVICE_POSTGRES_HOST}:${INVENTORY_SERVICE_POSTGRES_CONTAINER_PORT}/${INVENTORY_SERVICE_POSTGRES_DATABASE}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${INVENTORY_SERVICE_POSTGRES_USERNAME}
spring.datasource.password=${INVENTORY_SERVICE_POSTGRES_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Springdoc / Swagger
#   http://localhost:${INVENTORY_SERVICE_CONTAINER_PORT}/swagger-ui/index.html
#   http://localhost:${INVENTORY_SERVICE_CONTAINER_PORT}/v3/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.api-docs.resolve-schema-properties=true