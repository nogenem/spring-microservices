product-service:
  uri: lb://${PRODUCT_SERVICE_HOSTNAME}
inventory-service:
  uri: lb://${INVENTORY_SERVICE_HOSTNAME}
order-service:
  uri: lb://${ORDER_SERVICE_HOSTNAME}
auth-service:
  uri: lb://${AUTH_SERVICE_HOSTNAME}
discovery-server-service:
  uri: http://${DISCOVERY_SERVER_SERVICE_SECURITY_USERNAME}:${DISCOVERY_SERVER_SERVICE_SECURITY_PASSWORD}@${DISCOVERY_SERVER_SERVICE_HOSTNAME}:${DISCOVERY_SERVER_SERVICE_CONTAINER_PORT}

# responses:
#   exceptions:
#     return-stack-trace: true

server:
  port: ${API_GATEWAY_SERVICE_CONTAINER_PORT}

spring:
  application:
    name: api-gateway-service
  main:
    web-application-type: reactive
  cloud:
    gateway:
      routes:
        # /api/**
        - id: product-service
          uri: ${product-service.uri}
          predicates:
            - Path=/api/products/**

        - id: inventory-service
          uri: ${inventory-service.uri}
          predicates:
            - Path=/api/inventories/**

        - id: order-service
          uri: ${order-service.uri}
          predicates:
            - Path=/api/orders/**

        - id: auth-service
          uri: ${auth-service.uri}
          predicates:
            - Path=/api/auth/**

        # /admin/**/web
        - id: discovery-server-service
          uri: ${discovery-server-service.uri}
          predicates:
            - Path=/admin/eureka/web
          filters:
            - SetPath=/

        - id: discovery-server-service-static
          uri: ${discovery-server-service.uri}
          predicates:
            - Path=/eureka/**

        - id: zipkin
          uri: http://${ZIPKIN_HOSTNAME}:${ZIPKIN_CONTAINER_PORT}
          predicates:
            - Path=${ZIPKIN_UI_BASEPATH}
          filters:
            - SetPath=/zipkin/

        - id: zipkin-static
          uri: http://${ZIPKIN_HOSTNAME}:${ZIPKIN_CONTAINER_PORT}
          predicates:
            - Path=${ZIPKIN_UI_BASEPATH}/**
          filters:
            - RewritePath=${ZIPKIN_UI_BASEPATH}/(?<segment>.*),/zipkin/$\{segment}

        - id: postgres-adminer
          uri: http://${POSTGRES_ADMINER_HOSTNAME}:${POSTGRES_ADMINER_CONTAINER_PORT}
          predicates:
            - Path=/admin/adminer/web/**
          filters:
            - RewritePath=/admin/adminer/web/(?<segment>.*),/$\{segment}/

        - id: kafka-ui
          uri: http://${KAFKA_UI_HOSTNAME}:${KAFKA_UI_CONTAINER_PORT}
          predicates:
            - Path=${KAFKA_UI_CONTEXT_PATH}

        - id: kafka-ui-static
          uri: http://${KAFKA_UI_HOSTNAME}:${KAFKA_UI_CONTAINER_PORT}
          predicates:
            - Path=${KAFKA_UI_CONTEXT_PATH}/**

        - id: product-service-mongo-express
          uri: http://product-service-mongo-express:8081
          predicates:
            - Path=${PRODUCT_SERVICE_MONGO_EXPRESS_BASEURL}

        - id: product-service-mongo-express-static
          uri: http://product-service-mongo-express:8081
          predicates:
            - Path=${PRODUCT_SERVICE_MONGO_EXPRESS_BASEURL}/**

logging:
  level:
    # '[org.springframework.cloud.gateway]': DEBUG
    # '[reactor.netty.http.client]': DEBUG
    '[org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping]': TRACE
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOSTNAME}:${ZIPKIN_CONTAINER_PORT}/api/v2/spans

eureka:
  client:
    serviceUrl:
      defaultZone: http://${DISCOVERY_SERVER_SERVICE_SECURITY_USERNAME}:${DISCOVERY_SERVER_SERVICE_SECURITY_PASSWORD}@${DISCOVERY_SERVER_SERVICE_HOSTNAME}:${DISCOVERY_SERVER_SERVICE_CONTAINER_PORT}/eureka/
