# Application
spring.application.name=notification-service
server.port=${NOTIFICATION_SERVICE_CONTAINER_PORT}

# Logging
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Tracing
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://zipkin:${ZIPKIN_PORT}/api/v2/spans

# Eureka
eureka.client.serviceUrl.defaultZone=http://${DISCOVERY_SERVER_SERVICE_SECURITY_USERNAME}:${DISCOVERY_SERVER_SERVICE_SECURITY_PASSWORD}@${DISCOVERY_SERVER_SERVICE_HOSTNAME}:${DISCOVERY_SERVER_SERVICE_PORT}/eureka/
eureka.instance.prefer-ip-address=true

# Kafka
spring.kafka.bootstrap-servers=broker:${BROKER_INTERNAL_PORT}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.microservices.spring.orderservicecontracts.events